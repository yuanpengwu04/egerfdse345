import mongoose from "mongoose";

const UUID = mongoose.Types.UUID;

const userSchema = {
  UUID: UUID, // Unique identifier (auto-generated by MongoDB)
  firstName: String, // First name of user (required)
  lastName: String, // Last name of user (required)
  username: String, // Unique username for login and search (required)
  passwordHash: String, // Hashed password (e.g., using bcrypt) (required)
  gender: String, //Gender of user (required)
  dateOfBirth: Date, // Date of birth (required)
  profilePicture: URL, // URL of user's profile picture (optional)
  listOfChatRoom: [UUID], // List of chat room UUIDs (default: [])
  email: String, // Optional contact info
  onlineStatus: Boolean, // True if user is online, false if offline (default: false)
  createdAt: Date, // Timestamp of account creation (default: now)
  deleted: Boolean, // Flag for soft deletion (default: false)
};

const chatRoomSchema = {
  UUID: UUID, // Unique identifier (auto-generated by MongoDB)
  roomName: String, // Name of chat room (required)
  type: Boolean, // Type of chat room (e.g., false for private, true for  group) (required)
  roomCreator: UUID, // UUID of user who created the room (required)
  roomMembers: [UUID], // List of user UUIDs (default: [])
  lastMessage: UUID, // UUID of last message sent in the room (default: null)
  createdAt: Date, // Timestamp of room creation (default: now)
  deleted: Boolean, // Flag for soft deletion (default: false)
};

const messageSchema = {
  UUID: UUID, // Unique identifier (auto-generated by MongoDB)
  sender: UUID, // UUID of sender (required)
  chatRoom: UUID, // UUID of chat room (required)
  messageContent: String, // Content of message (required)
  createdAt: Date, // Timestamp of message creation (default: now)
  deleted: Boolean, // Flag for soft deletion (default: false)
};
